(ns open-company.db.migrations.flatten-sections
  (:require [rethinkdb.query :as r]
            [open-company.resources.company :as company]))


(defn- flatten-sections-in-company [conn company slug]
  
  (let [sections (flatten (conj (or (get-in company [:sections :progress] []))
                                (or (get-in company [:sections :company]) [])))]
    (println 
      (-> (r/table "companies")
        (r/get slug)
        (r/update {:sections sections})
        (r/run conn)))))

(defn up [conn]
  
  (println "\nFlattening sections...")

  ;; iterate through every company
  (doseq [slug (map :slug (company/list-companies conn))]
    (println "Updating" slug)
    (when-let [company (company/get-company conn slug)]
      (flatten-sections-in-company conn company slug)))

  ;; Update every company
  (println "\nRemoving categories...")
  (println
    (-> (r/table "companies")
      (r/replace (r/fn [section]
        (r/without section [:categories])))
      (r/run conn)))

  true)