(ns oc.api.db.migrations.create-updates
  (:require [rethinkdb.query :as r]
            [oc.lib.rethinkdb.migrations :as m]
            [oc.api.config :as c]
            [oc.api.resources.update :as update]))

(defn up [conn]
  
  (println "Creating table: " update/table-name)
  (println (m/create-table conn c/db-name update/table-name update/primary-key))
  (println (m/create-index conn update/table-name "slug"))
  (println (m/create-index conn update/table-name "dashboard-slug"))
  (println (m/create-index conn update/table-name "company-slug"))
  (println (m/create-compound-index conn update/table-name "slug-dashboard-slug"
              (r/fn [row] [(r/get-field row "slug") (r/get-field row "dashboard-slug")])))
  (println (m/create-compound-index conn update/table-name "slug-company-slug"
              (r/fn [row] [(r/get-field row "slug") (r/get-field row "company-slug")])))
  (println (m/create-compound-index conn update/table-name "slug-dashboard-slug-company-slug"
              (r/fn [row] [(r/get-field row "slug") (r/get-field row "dashboard-slug") (r/get-field row "company-slug")])))
  (println (m/create-index conn update/table-name "to" {:multi true}))

  true) ; return true on success