(ns oc.storage.db.migrations.create-updates
  (:require [rethinkdb.query :as r]
            [oc.lib.db.migrations :as m]
            [oc.storage.config :as c]
            [oc.storage.resources.update :as update]))

(defn up [conn]
  
  (println "Creating table: " update/table-name)
  (println (m/create-table conn c/db-name update/table-name update/primary-key))
  (println (m/create-index conn update/table-name "slug"))
  (println (m/create-index conn update/table-name "org-uuid"))
  (println (m/create-compound-index conn update/table-name "slug-org-uuid"
              (r/fn [row] [(r/get-field row "slug") (r/get-field row "org-uuid")])))
  (println (m/create-index conn update/table-name "to" {:multi true}))

  true) ; return true on success