(ns oc.storage.db.migrations.entry-versions
  (:require [rethinkdb.query :as r]
            [oc.lib.db.migrations :as m]
            [oc.storage.config :as config]
            [oc.storage.resources.entry :as entry]))

(defn up [conn]

  (println "Creating table: " entry/versions-table-name)
  (println (m/create-table conn config/db-name entry/versions-table-name entry/primary-key))
  (println (m/create-index conn entry/versions-table-name "revision-id"))
  (println (m/create-index conn entry/versions-table-name "topic-slug"))
  (println (m/create-index conn entry/versions-table-name "board-uuid"))
  (println (m/create-index conn entry/versions-table-name "org-uuid"))

  ;; create revision number in regular entry table
  (println "Add new property (revision-id) to existing entries...")
  (-> (r/table entry/table-name)
      (r/update (r/fn [e] {:revision-id 0}))
      (r/run conn))

  true) ; return true on success