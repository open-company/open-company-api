(ns oc.storage.db.migrations.create-boards
  (:require [rethinkdb.query :as r]
            [oc.lib.db.migrations :as m]
            [oc.storage.config :as c]
            [oc.storage.resources.board :as board]))

(defn up [conn]
  
  (println "Creating table: " board/table-name)
  (println (m/create-table conn c/db-name board/table-name board/primary-key))
  (println (m/create-index conn board/table-name "slug"))
  (println (m/create-index conn board/table-name "org-uuid"))
  (println (m/create-compound-index conn board/table-name "slug-org-uuid"
              (r/fn [row] [(r/get-field row "slug") (r/get-field row "org-uuid")])))
  (println (m/create-index conn board/table-name "authors" {:multi true}))
  (println (m/create-index conn board/table-name "viewers" {:multi true}))
  (println (m/create-index conn board/table-name "topics" {:multi true}))

  true) ; return true on success